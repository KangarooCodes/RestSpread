1) const filterOutOdds = (...arguments) => arguments.filter(num => num % 2 === 0)

2) const findMin = (...arguments) => Math.min(...arguments)

3) const mergeObjects = (objOne, objTwo) => ({...objOne, ...objTwo})

4) const doubleAndReturnArgs = (arr, ...arguments) => [...arr, ..arguments.map(arg => (arg * 2))]

5)	const removeRandom = items => { let ranNum = Math.floor(Math.random() * items.length); return [...items.slice(0, ranNum), ...items.slice(ranNum + 1)]; }
	
	const extend = (arrayOne, arrayTwo) => { return [...arrayOne, ...arrayTwo]; }
	
	const addKeyVal = (obj, key, val) => {...obj, [key]: val};

	const removeKey = (obj, key) => ({[key]: undefined, ...obj} = obj;) return obj;

	const combine = (objOne, objTwo) => {return {...objOne, ... objTwo};

	const addKeyVal = (obj, key, val) => {...obj, [key]: val};